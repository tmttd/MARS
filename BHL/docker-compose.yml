networks:
  mars_network:
    driver: bridge

services:
  converter:
    build: ./services/converter
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    restart: unless-stopped
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./datas/audio_uploads:/app/uploads
      - ./datas/audio_converted:/app/audio_outputs
      - ./services/converter:/app
    environment:
      - MONGODB_URI=mongodb://converter-db:27017/
      - MONGODB_DB=converter_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/audio_outputs
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - converter-db
      - work-db
      - redis
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  converter-worker:
    build: ./services/converter
    command: celery -A app.tasks worker --loglevel=info -Q converter
    restart: unless-stopped
    volumes:
      - ./services/converter:/app
      - ./datas/audio_uploads:/app/uploads
      - ./datas/audio_converted:/app/audio_outputs
    environment:
      - MONGODB_URI=mongodb://converter-db:27017/
      - MONGODB_DB=converter_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/audio_outputs
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - converter-db
      - work-db
      - redis
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  transcription:
    build: ./services/transcription
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    restart: unless-stopped
    ports:
      - "127.0.0.1:8001:8000"
    volumes:
      - ./services/transcription:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
    environment:
      - MONGODB_URI=mongodb://transcription-db:27017/
      - MONGODB_DB=transcription_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - CONVERTER_SERVICE_URL=http://converter:8000
      - UPLOAD_DIR=/app/audio_outputs
      - OUTPUT_DIR=/app/text_outputs
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - transcription-db
      - work-db
      - redis
      - converter

  transcription-worker:
    build: ./services/transcription
    command: celery -A app.tasks worker --loglevel=info -Q transcription
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M
    volumes:
      - ./services/transcription:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
    environment:
      - MONGODB_URI=mongodb://transcription-db:27017/
      - MONGODB_DB=transcription_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/audio_outputs
      - OUTPUT_DIR=/app/text_outputs
      - PYTHONWARNINGS=ignore
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - HUGGINGFACE_API_URL=https://api-inference.huggingface.co/models/openai/whisper-large-v3
    networks:
      - mars_network
    depends_on:
      - transcription-db
      - work-db
      - redis

  summarization:
    build: ./services/summarization
    volumes:
      - ./services/summarization:/app
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    restart: unless-stopped
    ports:
      - "127.0.0.1:8002:8000"
    environment:
      - MONGODB_URI=mongodb://summarization-db:27017/
      - MONGODB_DB=summarization_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TRANSCRIPTION_SERVICE_URL=http://transcription:8000
      - UPLOAD_DIR=/app/text_outputs
      - OUTPUT_DIR=/app/summary_outputs
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - summarization-db
      - work-db
      - redis
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  summarization-worker:
    build: ./services/summarization
    command: celery -A app.tasks worker --loglevel=info -Q summarization
    restart: unless-stopped
    volumes:
      - ./services/summarization:/app
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
      - ./datas/summarization_cache:/app/cache
    environment:
      - MONGODB_URI=mongodb://summarization-db:27017/
      - MONGODB_DB=summarization_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - UPLOAD_DIR=/app/text_outputs
      - OUTPUT_DIR=/app/summary_outputs
      - CACHE_DIR=/app/cache
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - summarization-db
      - work-db
      - redis
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  converter-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    restart: unless-stopped
    volumes:
      - ./converter_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  transcription-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    restart: unless-stopped
    volumes:
      - ./transcription_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  summarization-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    restart: unless-stopped
    volumes:
      - ./summarization_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  work-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    restart: unless-stopped
    volumes:
      - ./work_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  redis:
    image: redis:7.2
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M

  api_gateway:
    build: ./services/api_gateway
    restart: unless-stopped
    ports:
      - "8003:8000"
    volumes:
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CONVERTER_SERVICE_URL=http://converter:8000
      - TRANSCRIPTION_SERVICE_URL=http://transcription:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - AUDIO_OUTPUT_DIR=/app/audio_outputs
      - TEXT_OUTPUT_DIR=/app/text_outputs
      - SUMMARY_OUTPUT_DIR=/app/summary_outputs
      - PYTHONWARNINGS=ignore
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --log-level warning
    networks:
      - mars_network
    depends_on:
      - redis
      - converter
      - transcription
      - summarization
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  property-frontend:
    build:
      context: ./property-frontend
      args:
        - REACT_APP_API_URL=http://localhost:8003
    ports:
      - "3000:80"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - api_gateway
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  sqs_consumer:
    build: ./services/sqs_consumer
    command: python -m app.main
    restart: unless-stopped
    environment:
      - AWS_REGION=ap-northeast-2
      - SQS_QUEUE_URL=${SQS_QUEUE_URL}
      - API_ENDPOINT=http://api_gateway:8000/Total_Processing
      # - PYTHONWARNINGS=ignore
      - PYTHONUNBUFFERED=1
    networks:
      - mars_network
    depends_on:
      - api_gateway
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; from app.main import ConsumerService; sys.exit(0 if ConsumerService().check_health() else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

volumes:
  converter_db:
  transcription_db:
  summarization_db:
  datas:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/datas
      o: bind