version: "3.9"

networks:
  mars_network:
    driver: bridge

services:
  converter:
    build: ./services/converter
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8000:8000"
    volumes:
      - ./datas/audio_uploads:/app/uploads
      - ./datas/audio_converted:/app/audio_outputs
      - ./services/converter:/app
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=converter_db
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/audio_outputs
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      redis:
        condition: service_started

  converter-worker:
    build: ./services/converter
    command: celery -A app.tasks worker --loglevel=info -Q converter
    volumes:
      - ./services/converter:/app
      - ./datas/audio_uploads:/app/uploads
      - ./datas/audio_converted:/app/audio_outputs
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=converter_db
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/audio_outputs
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - redis

  transcription:
    build: ./services/transcription
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8001:8000"
    volumes:
      - ./services/transcription:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=transcription_db
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - CONVERTER_SERVICE_URL=http://converter:8000
      - UPLOAD_DIR=/app/audio_outputs
      - OUTPUT_DIR=/app/text_outputs
      - PYTHONWARNINGS=ignore
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - mars_network
    depends_on:
      redis:
        condition: service_started
      converter:
        condition: service_started

  transcription-worker:
    build: ./services/transcription
    command: celery -A app.tasks worker --loglevel=info -Q transcription
    deploy:
      resources:
        limits:
          memory: 24G
        reservations:
          memory: 12G
    volumes:
      - ./services/transcription:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/whisper_cache:/app/whisper_cache
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=transcription_db
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/audio_outputs
      - OUTPUT_DIR=/app/text_outputs
      - PYTHONWARNINGS=ignore
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - mars_network
    depends_on:
      - redis

  summarization:
    build: ./services/summarization
    volumes:
      - ./services/summarization:/app
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8002:8000"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=summarization_db
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TRANSCRIPTION_SERVICE_URL=http://transcription:8000
      - UPLOAD_DIR=/app/text_outputs
      - OUTPUT_DIR=/app/summary_outputs
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      redis:
        condition: service_started

  summarization-worker:
    build: ./services/summarization
    command: celery -A app.tasks worker --loglevel=info -Q summarization
    volumes:
      - ./services/summarization:/app
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
      - ./datas/summarization_cache:/app/cache
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=summarization_db
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - UPLOAD_DIR=/app/text_outputs
      - OUTPUT_DIR=/app/summary_outputs
      - CACHE_DIR=/app/cache
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - redis

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api_gateway:
    build: ./services/api_gateway
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8003:8000"
    volumes:
      - ./services/api_gateway:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - WORK_MONGODB_DB=mars_work_db
      - DATABASE_SERVICE_URL=http://database:8000
      - REDIS_URL=redis://redis:6379/0
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      redis:
        condition: service_started
      database:
        condition: service_started

  property-frontend:
    build:
      context: ./property-frontend
      # ↓↓↓ 여기만 수정 ↓↓↓
      args:
        - REACT_APP_API_URL=http://api_gateway:8000
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - api_gateway
    networks:
      - mars_network

  database:
    build: ./services/database
    ports:
      - "8005:8000"
    volumes:
      - ./services/database:/app
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - WORK_MONGODB_DB=mars_work_db
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network

  s3_service:
    build: ./services/s3_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8004:8000"
    volumes:
      - ./services/s3_service:/app
      - ./datas/audio_converted:/app/audio_outputs
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network

  sqs_consumer:
    build: ./services/sqs_consumer
    command: python -m app.main
    restart: unless-stopped
    environment:
      - AWS_REGION=ap-northeast-2
      - SQS_QUEUE_URL=${SQS_QUEUE_URL}
      - API_ENDPOINT=http://api_gateway:8000/Total_Processing
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      # - PYTHONWARNINGS=ignore
      - PYTHONUNBUFFERED=1
    networks:
      - mars_network
    depends_on:
      - api_gateway
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; from app.main import ConsumerService; sys.exit(0 if ConsumerService().check_health() else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  auth:
    build: ./services/auth
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8006:8000"
    volumes:
      - ./services/auth:/app
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - DB_NAME=mars_work_db
      - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
      - AUTH_TOKEN_EXPIRE_MINUTES=${AUTH_TOKEN_EXPIRE_MINUTES}
    networks:
      - mars_network

volumes:
  whisper_cache:
  datas:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/datas
      o: bind
