version: '3.8'

networks:
  mars_network:
    driver: bridge

services:
  converter:
    build: ./services/converter
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8000:8000"
    volumes:
      - ./datas/audio_uploads:/app/uploads
      - ./datas/audio_converted:/app/audio_outputs
      - ./services/converter:/app
    environment:
      - MONGODB_URI=mongodb://converter-db:27017/
      - MONGODB_DB=converter_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/audio_outputs
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - converter-db
      - work-db
      - redis

  converter-worker:
    build: ./services/converter
    command: celery -A app.tasks worker --loglevel=info -Q converter
    volumes:
      - ./services/converter:/app
      - ./datas/audio_uploads:/app/uploads
      - ./datas/audio_converted:/app/audio_outputs
    environment:
      - MONGODB_URI=mongodb://converter-db:27017/
      - MONGODB_DB=converter_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/audio_outputs
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - converter-db
      - work-db
      - redis

  transcription:
    build: ./services/transcription
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8001:8000"
    volumes:
      - ./services/transcription:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
    environment:
      - MONGODB_URI=mongodb://transcription-db:27017/
      - MONGODB_DB=transcription_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - CONVERTER_SERVICE_URL=http://converter:8000
      - UPLOAD_DIR=/app/audio_outputs
      - OUTPUT_DIR=/app/text_outputs
      - PYTHONWARNINGS=ignore
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
    networks:
      - mars_network
    depends_on:
      - transcription-db
      - work-db
      - redis
      - converter

  transcription-worker:
    build: ./services/transcription
    command: celery -A app.tasks worker --loglevel=info -Q transcription
    deploy:
      resources:
        limits:
          memory: 24G
        reservations:
          memory: 12G
    volumes:
      - ./services/transcription:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/whisper_cache:/app/whisper_cache
    environment:
      - MONGODB_URI=mongodb://transcription-db:27017/
      - MONGODB_DB=transcription_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/audio_outputs
      - OUTPUT_DIR=/app/text_outputs
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - transcription-db
      - work-db
      - redis

  summarization:
    build: ./services/summarization
    volumes:
      - ./services/summarization:/app
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8002:8000"
    environment:
      - MONGODB_URI=mongodb://summarization-db:27017/
      - MONGODB_DB=summarization_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TRANSCRIPTION_SERVICE_URL=http://transcription:8000
      - UPLOAD_DIR=/app/text_outputs
      - OUTPUT_DIR=/app/summary_outputs
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - summarization-db
      - work-db
      - redis

  summarization-worker:
    build: ./services/summarization
    command: celery -A app.tasks worker --loglevel=info -Q summarization
    volumes:
      - ./services/summarization:/app
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
      - ./datas/summarization_cache:/app/cache
    environment:
      - MONGODB_URI=mongodb://summarization-db:27017/
      - MONGODB_DB=summarization_db
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - UPLOAD_DIR=/app/text_outputs
      - OUTPUT_DIR=/app/summary_outputs
      - CACHE_DIR=/app/cache
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network
    depends_on:
      - summarization-db
      - work-db
      - redis

  converter-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    volumes:
      - ./converter_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  transcription-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    volumes:
      - ./transcription_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  summarization-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    volumes:
      - ./summarization_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  call-db:
    image: mongo:latest
    container_name: call-db
    command: mongod --quiet --logpath /dev/null
    ports:
      - "27018:27017"
    volumes:
      - call_db_data:/data/db
      - ./services/scripts/init-call-db.js:/docker-entrypoint-initdb.d/init-call-db.js:ro
    environment:
      - MONGO_INITDB_DATABASE=call_data_db
    networks:
      - mars_network

  work-db:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    volumes:
      - ./work_db:/data/db
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - mars_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api_gateway:
    build: ./services/api_gateway
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8003:8000"
    volumes:
      - ./services/api_gateway:/app
      - ./datas/audio_converted:/app/audio_outputs
      - ./datas/transcription_outputs:/app/text_outputs
      - ./datas/summarization_outputs:/app/summary_outputs
    environment:
      - WORK_MONGODB_URI=mongodb://work-db:27017/
      - WORK_MONGODB_DB=mars_work_db
      - REDIS_URL=redis://redis:6379/0
      - PYTHONWARNINGS=ignore
      - CALL_DB_URI=mongodb://call-db:27017
      - CALL_DB_NAME=call_data_db
    networks:
      - mars_network
    depends_on:
      - work-db
      - redis
      - s3_service

  property-frontend:
    build:
      context: ./property-frontend
      args:
        - REACT_APP_API_URL=http://localhost:8003
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - api_gateway
      - work-db
      - call-db
    networks:
      - mars_network



  s3_service:
    build: ./services/s3_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level warning
    ports:
      - "8004:8000"
    volumes:
      - ./services/s3_service:/app
      - ./datas/audio_converted:/app/audio_outputs
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - PYTHONWARNINGS=ignore
    networks:
      - mars_network

volumes:
  whisper_cache:
  converter_db:
  transcription_db:
  summarization_db:
  call_db_data:
  datas:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/datas
      o: bind
      